"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
exports.TrustedOffchainHelper__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "url",
                type: "string"
            },
            {
                internalType: "bytes",
                name: "prefix",
                type: "bytes"
            },
        ],
        name: "OffchainLookup",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "message",
                type: "string"
            },
        ],
        name: "UsageInformation",
        type: "error"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address"
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "OwnershipTransferred",
        type: "event"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "sender",
                type: "address"
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "signatureHash",
                type: "bytes32"
            },
        ],
        name: "ProofAccepted",
        type: "event"
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address"
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "url",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "url_",
                type: "string"
            },
        ],
        name: "setUrl",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signer_",
                type: "address"
            },
        ],
        name: "setSigner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "getSigner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var TrustedOffchainHelper__factory = /** @class */ (function () {
    function TrustedOffchainHelper__factory() {
    }
    TrustedOffchainHelper__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    TrustedOffchainHelper__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    TrustedOffchainHelper__factory.abi = _abi;
    return TrustedOffchainHelper__factory;
}());
exports.TrustedOffchainHelper__factory = TrustedOffchainHelper__factory;
